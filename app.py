from flask import Flask, render_template, request, jsonify
from flask_cors import CORS
from db import get_all_shifts, get_statistics
from datetime import datetime

app=Flask(__name__)
CORS(app)  # –†–∞–∑—Ä–µ—à–∞–µ–º CORS –¥–ª—è API


@app.route("/")
def index():
    """–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º"""
    return render_template("index.html")


@app.route("/api/shifts")
def api_shifts():
    """API endpoint –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–º–µ–Ω"""
    try:
        print("[DEBUG] API /api/shifts –≤—ã–∑–≤–∞–Ω")
        month=request.args.get("month", type=int)
        user_id=request.args.get("user_id")

        shifts=get_all_shifts()
        print(f"[DEBUG] –ü–æ–ª—É—á–µ–Ω–æ —Å–º–µ–Ω: {len(shifts)}")

        # –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –º–µ—Å—è—Ü—É
        if month:
            shifts=[s for s in shifts if s.get("date") and
                    datetime.fromisoformat(s["date"]).month == month]

        # –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        if user_id:
            shifts=[s for s in shifts if s.get("user_id") == user_id]

        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º date –æ–±—ä–µ–∫—Ç—ã –≤ —Å—Ç—Ä–æ–∫–∏ –¥–ª—è JSON
        for shift in shifts:
            if shift.get('date') and hasattr(shift['date'], 'isoformat'):
                shift['date']=shift['date'].isoformat()

        return jsonify(shifts)

    except Exception as e:
        print(f"[ERROR] –û—à–∏–±–∫–∞ –≤ API: {e}")
        import traceback
        traceback.print_exc()
        return jsonify({"error": str(e)}), 500


@app.route("/api/statistics")
def api_statistics():
    """API endpoint –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
    try:
        stats=get_statistics()
        return jsonify(stats)
    except Exception as e:
        print(f"[ERROR] –û—à–∏–±–∫–∞ –≤ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ: {e}")
        return jsonify({"error": str(e)}), 500


@app.route("/health")
def health():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏"""
    try:
        shifts_count=len(get_all_shifts())
        return jsonify({
            "status": "healthy",
            "shifts_count": shifts_count,
            "timestamp": datetime.now().isoformat()
        })
    except Exception as e:
        return jsonify({"status": "unhealthy", "error": str(e)}), 500


if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ Flask —Å–µ—Ä–≤–µ—Ä–∞...")
    print("üåê –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: http://localhost:5000")
    print("üì° API: http://localhost:5000/api/shifts")
    app.run(debug=True, host='0.0.0.0', port=8001)